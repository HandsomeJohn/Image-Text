This package provides two demos of our relaxation labeling based point matching algorithm. 

1) PointMatchDemo1 tests our approach on Chui-Rangarajan data set. You need download the data set from our website. The original data set is stored as MAT files of MATLAB. We provide a MATLAB tool to convert MAT files to SYN files, which are Microsoft Windows text files. The structure of a SYN file is self-explaining. Following is the usage of this demo.

PointMatchDemo1 pattern type
    pattern -- fish or chinese. Two shapes in the Chui-Rangarajan data set.
    type    -- def, noise, outlier
               def      -- Testing robustness under deformation.
               noise    -- Testing robustness under noise.
               outlier  -- Testing robustness under outliers.
Point matching results are saved in a log file: pattern_type.log.

Examples:
 	PointMatchDemo1 fish def
		Testing on the fish_def data set. 
		The results are saved in the file of fish_def.log.


2) PointMatchDemo2 demonstrates our approach on user-provided examples. There are several parameters which can be tuned for specified applications. Input of the demo is two text files with suffix *.POINT, each provides a set of points. The output of the program is another text file with suffix *.MATCH. A MATLAB tool, VisualMatch.m, is provided to visualize the point matching results. Following is its usage:

PointMatchDemo2 [-g] [-a] [-r] [-f] [-t T_Init] [-e E_Ave] [-i I_Max] fnPntModel fnPntDeform
   Output of this program is a file with suffix *.match.
  -g        -- Do not use relaxation labeling based graph matching.
  -a        -- Do not use the affine transformation for the first iteration.
  -r        -- Rotation invariant matching.
               Avoid using it unless necessary. Imposing rotation invariance
               may deteriorate the performance.
  -f        -- Force to find as many matches as possible.
  -t T_Init -- Parameter related to converting the shape context distance
               to a probability measure.
               Default: 0.1
  -e E_Ave  -- Average number of neighbors of a point.
               Default: 5
  -i I_Max  -- Maximum number of iterations.
               Default: 10
  fnPntModel  -- File containing the model point set.
  fnPntDeform -- File containing the deformed point set.
NOTE: After each iteration of point matching, the model point set is
      warped toward the deformed point set. Therefore, the matching procedure
      is not symmetric. The point matching results of the following commands may be different.
      'PointMatchDemo2 fnPoint1 fnPoint2'
      'PointMatchDemo2 fnPoint2 fnPoint1'

3) Testing data
Several testing shape pairs generated by Chui and Rangarajan are provided:
Curve_1.point vs. Curve_2.point
Contour1_1.point vs. Contour1_2.point
Contour2_1.point vs. Contour2_2.point

Several handwriting samples are provided for experiments on real shapes:
Sig001_001.point vs. Sig001_002.point
Sig003_002.point vs. Sig003_003.point
Sig004_001.point vs. Sig004_005.point
Sig005_001.point vs. Sig005_010.point


Please refer our technical report for the details of our algorithm.
Yefeng Zheng and David Doermann. Robust Point Matching for Non-rigid Shapes: A Relaxation Labeling Based Approach. Technical Report: LAMP-TR-117, University of Maryland, College Park, December 2004.

Good luck!

Yefeng Zheng

Language and Media Processing Laboratory
University of Maryland, College Park

12/10/2004